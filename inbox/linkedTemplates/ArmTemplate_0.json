{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "inbox"
		},
		"DataLake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DataLake'"
		},
		"DataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dl2inbox.dfs.core.windows.net"
		},
		"OpenDatasets_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'OpenDatasets'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DataLake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OpenDatasets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('OpenDatasets_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLakeNYCTaxiY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "taxi.snappy.parquet",
						"folderPath": "yellow",
						"fileSystem": "dls2"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NYCTaxiY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OpenDatasets",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "part-00000-tid-8898858832658823408-a1de80bd-eed3-4d11-b9d4-fa74bfbd47bc-426339-98.c000.snappy.parquet",
						"folderPath": "yellow/puYear=2016/puMonth=9",
						"container": "nyctlc"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OpenDatasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyTaxiY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@concat('yellow/',pipeline().parameters.path)",
										"type": "Expression"
									},
									"wildcardFileName": "*.snappy.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "vendorID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "vendorID",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "tpepPickupDateTime",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "tpepPickupDateTime",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "tpepDropoffDateTime",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "tpepDropoffDateTime",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "passengerCount",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "passengerCount",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "tripDistance",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "tripDistance",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "puLocationId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "puLocationId",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "doLocationId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "doLocationId",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "startLon",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "startLon",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "startLat",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "startLat",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "endLon",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "endLon",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "endLat",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "endLat",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "rateCodeId",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "rateCodeId",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "storeAndFwdFlag",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "storeAndFwdFlag",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "paymentType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "paymentType",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "fareAmount",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "fareAmount",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "extra",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "extra",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "mtaTax",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "mtaTax",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "improvementSurcharge",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "improvementSurcharge",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "tipAmount",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "tipAmount",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "tollsAmount",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "tollsAmount",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "totalAmount",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "totalAmount",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "NYCTaxiY",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataLakeNYCTaxiY",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"path": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/NYCTaxiY')]",
				"[concat(variables('factoryId'), '/datasets/DataLakeNYCTaxiY')]"
			]
		}
	]
}